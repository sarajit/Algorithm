/*Given  integers, count the number of pairs of integers whose difference is .

Input Format

The first line contains  and . 
The second line contains  numbers of the set. All the  numbers are unique.

Constraints

Each integer will be greater than  and at least  smaller than .
Output Format

An integer that tells the number of pairs of integers whose difference is .

Sample Input

5 2  
1 5 3 4 2  
Sample Output

3
Explanation

There are 3 pairs of integers in the set with a difference of 2.
*/
import java.util.*;

public class  MissingNumber 
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);

		int set_1= sc.nextInt();
		int [] set_1_Array = new int[set_1] ;
		Map <Integer,Integer> set_1_map = new HashMap<Integer,Integer>();

		for(int i =0; i<set_1 ; i++){
			set_1_Array[i] = sc.nextInt();
			if (set_1_map.containsKey(set_1_Array[i]))
				 set_1_map.put(set_1_Array[i],set_1_map.get(set_1_Array[i])+1);
			else
			
				set_1_map.put(set_1_Array[i],1);
		}

	   List < Integer > result = new ArrayList < Integer > ();
	   int t = sc.nextInt();
	   for (int i = 0; i < t; i++) {
			int num = sc.nextInt();
			if (set_1_map.containsKey(num)) {
				set_1_map.put(num, set_1_map.get(num) - 1);
			} else {
			result.add(num);
			}
	  }

	  for (Integer key: set_1_map.keySet()) {
		   if (set_1_map.get(key) != 0) {
			result.add(key);
		  }
	  }
	  
	  Collections.sort(result);
	  for (Integer val: result) {
		System.out.print(val + " ");
	  }
	
	}
}

